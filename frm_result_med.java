/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package cms;

import static cms.Home.tbl_generic;
import cms.function.SQLConnection;
import static cms.function.tbl_function.tbl_function;
import com.sun.glass.events.KeyEvent;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.Scanner;
import javax.swing.JOptionPane;
import javax.swing.ListSelectionModel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Benjie
 */
public class frm_result_med extends javax.swing.JFrame {

    /**
     * Creates new form frm_result_med
     */
    Connection conn = SQLConnection.ConnDB();
    PreparedStatement pstmt = null;
    Statement st = null;
    ResultSet rs = null;
    int[] array = new int[2];
    
    public frm_result_med() {
        initComponents();
        tbl_function(tbl_result_med);
        updateMedTable();
//        updateCmbMedCat();
        //remove();
        tbl_result_med.setRowSelectionAllowed(true);
        tbl_result_med.setSelectionMode(ListSelectionModel.MULTIPLE_INTERVAL_SELECTION);
        //tbl_result_med.setDefaultEditor(Integer.class, new IntegerEditor(0, 100));
    }
    
    public void remove(){
            DefaultTableModel dtm = (DefaultTableModel)frm_purchase.order_table.getModel();
            DefaultTableModel mod = (DefaultTableModel)tbl_result_med.getModel();
                
            int i = dtm.getRowCount();
                
                
            for (int x=0;x<i;x++){
                    
                String op = dtm.getValueAt(x, 0).toString();
                
                for (int l = 0;l<mod.getRowCount();l++){
                    String id = mod.getValueAt(l, 0).toString();
                    
                    if (op.equals(id)){
                        mod.removeRow(l);
                    }
                }
                
            }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        tbl_result_med = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jPanel5 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        medCat = new javax.swing.JComboBox();
        checkbox1 = new javax.swing.JCheckBox();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setUndecorated(true);

        jPanel1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(10, 61, 115)));

        jButton1.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jButton1.setForeground(new java.awt.Color(10, 61, 115));
        jButton1.setText("Add");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jButton2.setForeground(new java.awt.Color(10, 61, 115));
        jButton2.setText("Cancel");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jScrollPane2.setBorder(null);

        tbl_result_med.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        tbl_result_med.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Medicine ID", "Name", "In-Stock", "Check", "Input Quantity"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Boolean.class, java.lang.Object.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, true, true
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tbl_result_med.setOpaque(false);
        tbl_result_med.setRowHeight(27);
        tbl_result_med.getTableHeader().setReorderingAllowed(false);
        tbl_result_med.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tbl_result_medMouseClicked(evt);
            }
        });
        tbl_result_med.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                tbl_result_medKeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                tbl_result_medKeyTyped(evt);
            }
        });
        jScrollPane2.setViewportView(tbl_result_med);
        if (tbl_result_med.getColumnModel().getColumnCount() > 0) {
            tbl_result_med.getColumnModel().getColumn(0).setResizable(false);
            tbl_result_med.getColumnModel().getColumn(1).setResizable(false);
            tbl_result_med.getColumnModel().getColumn(2).setResizable(false);
            tbl_result_med.getColumnModel().getColumn(3).setResizable(false);
        }

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(10, 61, 115));
        jLabel1.setText("Medicine List");

        jPanel5.setBackground(new java.awt.Color(10, 61, 115));

        jLabel4.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(240, 240, 240));
        jLabel4.setText("Medicine List");

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(jLabel4)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel4)
                .addContainerGap())
        );

        jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(10, 61, 115));
        jLabel2.setText("Sort by category :");

        medCat.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "All", "Tablets / Capsules", "Liquid / Drops", "Patches" }));
        medCat.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                medCatItemStateChanged(evt);
            }
        });
        medCat.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                medCatActionPerformed(evt);
            }
        });

        checkbox1.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        checkbox1.setText("Select All");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 205, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 205, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 207, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(medCat, javax.swing.GroupLayout.PREFERRED_SIZE, 167, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(192, 192, 192)
                                .addComponent(checkbox1)))
                        .addGap(0, 272, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(medCat, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(checkbox1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 487, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(jButton2))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed

            DefaultTableModel mod = (DefaultTableModel)tbl_result_med.getModel();
            DefaultTableModel model = (DefaultTableModel)frm_purchase.order_table.getModel();
            Boolean isChecked = false;
            for (int i = 0; i<tbl_result_med.getRowCount();i++){
                isChecked = Boolean.valueOf(tbl_result_med.getValueAt(i,3).toString());

                if (isChecked){
                    isChecked = true;
                    break;
                }
            }
            if (isChecked == false){

                JOptionPane.showMessageDialog(null, "Select at least one medicine to order");

            }else{
                Boolean tama = true;
                for (int loop = 0; loop<tbl_result_med.getRowCount();loop++){
                    Boolean chek = Boolean.valueOf(tbl_result_med.getValueAt(loop,3).toString());
                    if (chek){
                        String quantity = tbl_result_med.getValueAt(loop, 4).toString();
                        tama = isInteger(quantity, 10);
                        if (tama == false){
                            break;
                        }
                    }
                }
                if (tama == true){
                    for (int i = 0; i<tbl_result_med.getRowCount();i++){

                    Boolean Checked = Boolean.valueOf(tbl_result_med.getValueAt(i,3).toString());
                    System.out.println(Checked);
                    if (Checked){
                        //Boolean tama = true;
                        //while (tama == true){
                            String med_id = tbl_result_med.getValueAt(i, 0).toString();
                            String med_name = tbl_result_med.getValueAt(i, 1).toString();
                            String med_qnty = tbl_result_med.getValueAt(i, 2).toString();
                            String med_qnty_order = tbl_result_med.getValueAt(i, 4).toString();
                            int validDigit = Integer.parseInt(med_qnty_order);
                            model.addRow(new Object[]{med_id, med_name, med_qnty, validDigit});
                            this.dispose();
                        }
                    }
                }else{
                    JOptionPane.showMessageDialog(null, "Input Valid Integer");
                }
            }
        
    }//GEN-LAST:event_jButton1ActionPerformed
    
    public void updateMedTable(){
        
        DefaultTableModel model = (DefaultTableModel)tbl_result_med.getModel();
        model.getDataVector().removeAllElements();
        tbl_result_med.repaint();
        String med_id = "";
        try {
            st = conn.createStatement();
            String query = "SELECT * FROM med_table";
            rs = st.executeQuery(query);

            while (rs.next()){
                med_id = rs.getString("med_id");
                String med_name = rs.getString("med_name");
                String med_remain = rs.getString("med_remain");
                //String med_qty_ordered = rs.getString("med_qty_ordered");
                Boolean x = false;
                
                model.addRow(new Object[]{med_id, med_name, med_remain,x,""});
            }

        } catch (SQLException e) {
            JOptionPane.showMessageDialog(this, "updateMedTable");
        
        }
    }
    
    public void updateCmbMedCat(){
        medCat.removeAllItems();
        try {
            st = conn.createStatement();
            String query = "SELECT category_name FROM med_category INNER JOIN med_table ON med_category.category_id = med_table.med_category GROUP by med_category;";
            rs = st.executeQuery(query);

            while (rs.next()){
                String medCatName = rs.getString("category_name");
                medCat.addItem(medCatName);
                //getTable();

            }
            //System.out.println("SUCSESS GAGO");
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(this, "updateTable");
        }
        
    }
    
    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        this.dispose();
    }//GEN-LAST:event_jButton2ActionPerformed

    private void tbl_result_medMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tbl_result_medMouseClicked

    }//GEN-LAST:event_tbl_result_medMouseClicked

    private void tbl_result_medKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tbl_result_medKeyTyped
        // TODO add your handling code here:
       
       
    }//GEN-LAST:event_tbl_result_medKeyTyped

    private void tbl_result_medKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tbl_result_medKeyPressed
        // TODO add your handling code here:
        
    }//GEN-LAST:event_tbl_result_medKeyPressed

    private void medCatItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_medCatItemStateChanged
        // TODO add your handling code here:
        int i = medCat.getSelectedIndex();
        if(i == 0){
            updateMedTable();
        }else{
            updateCmbMedCatChange();
        }
        remove();
        
        
    }//GEN-LAST:event_medCatItemStateChanged

    private void medCatActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_medCatActionPerformed
        // TODO add your handling code here:
        //updateCmbMedCatChange();
    }//GEN-LAST:event_medCatActionPerformed
    
    public void updateCmbMedCatChange(){
        System.out.println(medCat.getSelectedIndex());
        DefaultTableModel model = (DefaultTableModel)tbl_result_med.getModel();
        model.setRowCount(0);
        int i = medCat.getSelectedIndex();
        
        String med_id = "";
        try {
            st = conn.createStatement();
            String query = "SELECT * FROM med_table WHERE med_category = '"+i+"' ORDER BY med_name;";
            rs = st.executeQuery(query);

            while (rs.next()){
                med_id = rs.getString("med_id");
                String med_name = rs.getString("med_name");
                String med_remain = rs.getString("med_remain");
                //String med_qty_ordered = rs.getString("med_qty_ordered");
                Boolean x = false;
                
                model.addRow(new Object[]{med_id, med_name, med_remain,x,""});
            }

        } catch (SQLException e) {
            e.printStackTrace();
        
        }
        //updateCmbMedCat();
    }
    
    
    public static boolean isInteger(String s, int radix) {
    Scanner sc = new Scanner(s.trim());
        if(!sc.hasNextInt(radix)) return false;
        sc.nextInt(radix);
        return !sc.hasNext();
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(frm_result_med.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(frm_result_med.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(frm_result_med.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(frm_result_med.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new frm_result_med().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JCheckBox checkbox1;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JComboBox medCat;
    private javax.swing.JTable tbl_result_med;
    // End of variables declaration//GEN-END:variables
}
