/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package cms;

import static cms.Medication.hour;
import static cms.Medication.lbl_id;
import cms.function.SQLConnection;
import static cms.new_Registration.nowna;
import com.sun.glass.events.KeyEvent;
import java.awt.Color;
import java.awt.Desktop;
import java.io.File;
import java.io.IOException;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;
import net.sf.jasperreports.engine.JasperCompileManager;
import net.sf.jasperreports.engine.JasperExportManager;
import net.sf.jasperreports.engine.JasperFillManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.engine.JasperPrintManager;
import net.sf.jasperreports.engine.JasperReport;
import net.sf.jasperreports.engine.design.JRDesignQuery;
import net.sf.jasperreports.engine.design.JasperDesign;
import net.sf.jasperreports.engine.xml.JRXmlLoader;



/**
 *
 * @author Benjie
 */
public class temp_medication extends javax.swing.JFrame {
    
    
    PreparedStatement pstmt = null;
    ResultSet rs = null;
    Connection conn = SQLConnection.ConnDB();
    /**
     * Creates new form temp_medication
     */
    public temp_medication() {
        initComponents();
    }
    
    
    public void refreshsuggestedmed(JTable hex1){
        
      try{
        
        String illname = cmb_illname.getSelectedItem().toString();  
        DefaultTableModel mod = (DefaultTableModel)hex1.getModel();
        mod.getDataVector().removeAllElements();
        hex1.repaint();
        
        String sql = "SELECT * FROM med_ill "
                    + "INNER JOIN med_table "
                    + "ON med_ill.med_id=med_table.med_id "
                    + "INNER JOIN ill_table "
                    + "ON med_ill.ill_id = ill_table.ill_id"
                    + " INNER JOIN ill_category "
                    + "ON ill_table.category_id = ill_category.category_id  "
                    + "WHERE med_table.med_name NOT IN (SELECT allergy_cause FROM allergy_tbl WHERE id_no = '"+lbl_id.getText()+"')"
                    + " AND med_ill.ill_id = (SELECT ill_table.ill_id "
                    + "FROM ill_table WHERE ill_name='"+illname+"')"
                    + " ORDER BY med_table.med_name";
            pstmt = conn.prepareStatement(sql);
            rs = pstmt.executeQuery();
            while (rs.next()){
                

                String mn = rs.getString("med_table.med_name");
                String mr = rs.getString("med_table.med_remain");
                String xy = rs.getString("ill_category.category_name");
                
                txt_category.setText(xy);
                if (txt_category.getText().equalsIgnoreCase("Contagious")){
                    txt_category.setForeground(Color.orange);
                }else if (txt_category.getText().equalsIgnoreCase("Emergency")){
                    txt_category.setForeground(Color.red);
                }else{
                    txt_category.setForeground(new Color(120,120,120));
                }
                
                
                Object karga [] = {mn,mr};
                mod.addRow(karga);
                hex1.setModel(mod);
            }

        }catch (Exception e){
            e.printStackTrace();
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        txt_searchmed = new javax.swing.JTextField();
        jLabel106 = new javax.swing.JLabel();
        txt_name = new javax.swing.JTextField();
        jLabel107 = new javax.swing.JLabel();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel2 = new javax.swing.JPanel();
        jLabel11 = new javax.swing.JLabel();
        jLabel34 = new javax.swing.JLabel();
        cmb_illname = new javax.swing.JComboBox();
        jLabel12 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tbl_med = new javax.swing.JTable();
        btn_med = new javax.swing.JButton();
        tgl_bedrest = new javax.swing.JToggleButton();
        txt_category = new javax.swing.JLabel();
        jPanel4 = new javax.swing.JPanel();
        jLabel17 = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        btn_print_assess = new javax.swing.JButton();
        txt_recommend = new javax.swing.JTextField();
        txt_assessment = new javax.swing.JTextField();
        lbl_assess = new javax.swing.JLabel();
        jLabel108 = new javax.swing.JLabel();
        txt_age = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        txt_searchmed.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        txt_searchmed.setForeground(new java.awt.Color(46, 47, 51));
        txt_searchmed.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txt_searchmedFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txt_searchmedFocusLost(evt);
            }
        });
        txt_searchmed.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_searchmedActionPerformed(evt);
            }
        });
        txt_searchmed.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txt_searchmedKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txt_searchmedKeyTyped(evt);
            }
        });

        jLabel106.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel106.setForeground(new java.awt.Color(145, 148, 150));
        jLabel106.setText("Visitor ID");

        txt_name.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        txt_name.setForeground(new java.awt.Color(46, 47, 51));
        txt_name.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txt_nameFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txt_nameFocusLost(evt);
            }
        });
        txt_name.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_nameActionPerformed(evt);
            }
        });
        txt_name.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txt_nameKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txt_nameKeyTyped(evt);
            }
        });

        jLabel107.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel107.setForeground(new java.awt.Color(145, 148, 150));
        jLabel107.setText("Full Name");

        jPanel2.setFont(new java.awt.Font("Helvetica Neue", 0, 11)); // NOI18N

        jLabel11.setFont(new java.awt.Font("Microsoft JhengHei UI Light", 1, 16)); // NOI18N
        jLabel11.setForeground(new java.awt.Color(10, 61, 115));
        jLabel11.setText("Select Illness");

        jLabel34.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel34.setForeground(new java.awt.Color(70, 70, 70));
        jLabel34.setText("Name");

        cmb_illname.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        cmb_illname.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        cmb_illname.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cmb_illnameItemStateChanged(evt);
            }
        });
        cmb_illname.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmb_illnameActionPerformed(evt);
            }
        });

        jLabel12.setFont(new java.awt.Font("Microsoft JhengHei UI Light", 1, 16)); // NOI18N
        jLabel12.setForeground(new java.awt.Color(10, 61, 115));
        jLabel12.setText("Suggested Medicines");

        tbl_med.setAutoCreateRowSorter(true);
        tbl_med.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        tbl_med.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Medicine Name", "Remaining Qty"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tbl_med.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_ALL_COLUMNS);
        tbl_med.setIntercellSpacing(new java.awt.Dimension(0, 0));
        tbl_med.setRowHeight(27);
        tbl_med.setShowHorizontalLines(false);
        tbl_med.setShowVerticalLines(false);
        tbl_med.getTableHeader().setReorderingAllowed(false);
        jScrollPane1.setViewportView(tbl_med);

        btn_med.setBackground(new java.awt.Color(51, 51, 255));
        btn_med.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        btn_med.setText("Proceed");
        btn_med.setBorderPainted(false);
        btn_med.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_medActionPerformed(evt);
            }
        });

        tgl_bedrest.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        tgl_bedrest.setForeground(new java.awt.Color(70, 70, 70));
        tgl_bedrest.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/png/add139_w (1).png"))); // NOI18N
        tgl_bedrest.setText("Bedrest");
        tgl_bedrest.setBorderPainted(false);
        tgl_bedrest.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        tgl_bedrest.setFocusPainted(false);
        tgl_bedrest.setFocusable(false);
        tgl_bedrest.setIconTextGap(14);
        tgl_bedrest.setPressedIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/png/check52.png"))); // NOI18N
        tgl_bedrest.setSelectedIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/png/check52.png"))); // NOI18N
        tgl_bedrest.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                tgl_bedrestItemStateChanged(evt);
            }
        });
        tgl_bedrest.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tgl_bedrestMouseClicked(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                tgl_bedrestMousePressed(evt);
            }
        });
        tgl_bedrest.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tgl_bedrestActionPerformed(evt);
            }
        });

        txt_category.setFont(new java.awt.Font("Segoe UI", 0, 15)); // NOI18N
        txt_category.setForeground(new java.awt.Color(120, 120, 120));
        txt_category.setText("Category");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(50, 50, 50)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel12)
                    .addComponent(jLabel11)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                            .addComponent(tgl_bedrest, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btn_med, javax.swing.GroupLayout.PREFERRED_SIZE, 188, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel34)
                        .addGap(26, 26, 26)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txt_category)
                            .addComponent(cmb_illname, javax.swing.GroupLayout.PREFERRED_SIZE, 262, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(39, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addComponent(jLabel11)
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel34)
                    .addComponent(cmb_illname, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(7, 7, 7)
                .addComponent(txt_category)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel12)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 182, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(tgl_bedrest, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btn_med))
                .addContainerGap(95, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab(" MEDICATION ", jPanel2);

        jPanel4.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));

        jLabel17.setFont(new java.awt.Font("Microsoft JhengHei UI Light", 1, 16)); // NOI18N
        jLabel17.setForeground(new java.awt.Color(10, 61, 115));
        jLabel17.setText("Assessment");

        jLabel19.setFont(new java.awt.Font("Microsoft JhengHei UI Light", 1, 16)); // NOI18N
        jLabel19.setForeground(new java.awt.Color(10, 61, 115));
        jLabel19.setText("Recommendation");

        btn_print_assess.setBackground(new java.awt.Color(0, 99, 170));
        btn_print_assess.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        btn_print_assess.setText("Print");
        btn_print_assess.setBorderPainted(false);
        btn_print_assess.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_print_assessActionPerformed(evt);
            }
        });

        lbl_assess.setFont(new java.awt.Font("Segoe UI", 0, 15)); // NOI18N
        lbl_assess.setForeground(new java.awt.Color(145, 148, 150));

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(50, 50, 50)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel19, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel17, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(232, 232, 232)
                        .addComponent(lbl_assess, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(txt_assessment)
                        .addComponent(txt_recommend, javax.swing.GroupLayout.DEFAULT_SIZE, 412, Short.MAX_VALUE)
                        .addComponent(btn_print_assess, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 188, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(79, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(44, 44, 44)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lbl_assess, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel17))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(txt_assessment, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(11, 11, 11)
                .addComponent(jLabel19)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(txt_recommend, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 72, Short.MAX_VALUE)
                .addComponent(btn_print_assess, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(67, 67, 67))
        );

        jTabbedPane1.addTab(" CLINICAL ASSESSMENT ", jPanel4);

        jLabel108.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel108.setForeground(new java.awt.Color(145, 148, 150));
        jLabel108.setText("Age");

        txt_age.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        txt_age.setForeground(new java.awt.Color(46, 47, 51));
        txt_age.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txt_ageFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txt_ageFocusLost(evt);
            }
        });
        txt_age.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_ageActionPerformed(evt);
            }
        });
        txt_age.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txt_ageKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txt_ageKeyTyped(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(60, 60, 60)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(jLabel106, javax.swing.GroupLayout.DEFAULT_SIZE, 125, Short.MAX_VALUE)
                                .addComponent(txt_searchmed))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel107, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txt_name, javax.swing.GroupLayout.PREFERRED_SIZE, 279, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jLabel108, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(txt_age, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addComponent(jLabel106)
                .addGap(7, 7, 7)
                .addComponent(txt_searchmed, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel107)
                        .addGap(7, 7, 7)
                        .addComponent(txt_name, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel108)
                        .addGap(7, 7, 7)
                        .addComponent(txt_age, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void cmb_illnameItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cmb_illnameItemStateChanged
        //CBox_function(cmb_name);

        /*
        try{

            DefaultTableModel mod = (DefaultTableModel)med_tbl.getModel();
            mod.getDataVector().removeAllElements();
            med_tbl.repaint();

            String sql = "SELECT med_table.med_name, med_table.med_remain FROM med_ill "
            + "INNER JOIN med_table "
            + "ON med_ill.med_id=med_table.med_id "
            + "WHERE med_ill.ill_id = (SELECT ill_table.ill_id "
            + "FROM ill_table WHERE ill_name='"+xo+"')"
            + "ORDER BY med_table.med_name";
            pstmt = conn.prepareStatement(sql);
            rs = pstmt.executeQuery();
            while (rs.next()){
                String mn = rs.getString("med_table.med_name");
                String mr = rs.getString("med_table.med_remain");

                Object karga [] = {mn,mr};
                mod.addRow(karga);
                med_tbl.setModel(mod);
            }

        }catch (Exception e){
            e.printStackTrace();
        }*/

        refreshsuggestedmed(tbl_med);
    }//GEN-LAST:event_cmb_illnameItemStateChanged

    private void cmb_illnameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmb_illnameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cmb_illnameActionPerformed

    private void btn_medActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_medActionPerformed

        try{
            String student = lbl_id.getText();

            String illname = cmb_illname.getSelectedItem().toString();

            String id_ng_koya_mo = "";

            //            String ill_id = "SELECT ill_id FROM ill_table WHERE ill_name = '"+illname+"'";

            int row = tbl_med.getSelectedRow();

            //            String med_id = "SELECT med_id FROM med_table WHERE med_name = '"+medname+"'";

            //            ////// CHECK KUNG MAY PININDOT SA MEDICINE TABLE //////
            //            if (!tbl_med.isRowSelected(row)){
                //                medname = "";
                //            }else{
                //                medname = tbl_med.getValueAt(row, 0).toString();
                //            }

            String b_result = "";
            String hello = null;

            ////// Check if bedrest is Toggled ///////
            if (tgl_bedrest.isSelected()){
                b_result = "1";
                hello = hour.toString();

            }else{
                b_result = "0";
            }

            if (!tbl_med.isRowSelected(row)){
                ////// IF BEDREST & NO MEDICINE /////

                //// INSTANTATION

                if (tgl_bedrest.isSelected()){
                    int decide = JOptionPane.showConfirmDialog(null, "Provide bedrest without medicine?",null,JOptionPane.YES_NO_OPTION);
                    ///// KUNG GUSTO HUMIGA NG WALANG GAMOT /////
                    if (decide==0){

                        ///// CHECK KUNG NAKA NASA BED SIYA //////

                        String check = "SELECT date_given, inTime FROM med_dspnsd WHERE id_no = '"+lbl_id.getText()+"' AND outTime is null AND inTime is not null"
                        + " AND date_given='"+nowna+"';";
                        pstmt = conn.prepareStatement(check);
                        rs = pstmt.executeQuery(check);

                        ///// kung meron nga siya /////
                        if (rs.next()){

                            JOptionPane.showMessageDialog(null, "This person is already in bed");

                        }else{

                            ///// bilangin ang bed na na-okupa /////
                            String count = "SELECT COUNT(id_no) as 'A' FROM med_dspnsd WHERE inTime is not null and outTime is null;";

                            pstmt = conn.prepareStatement(count);
                            rs = pstmt.executeQuery(count);
                            while(rs.next()){
                                int get = rs.getInt("A");
                                if (get==4){
                                    JOptionPane.showMessageDialog(null, "All Beds are currently occupied");

                                }else{

                                    String query = "INSERT INTO med_dspnsd SET"
                                    + " med_id = null,"
                                    + " ill_id = (SELECT ill_id FROM ill_table WHERE ill_name = '"+illname+"'),"
                                    + " bedrest = '"+b_result+"',"
                                    + " id_no = '"+lbl_id.getText()+"',"
                                    + " date_given = '"+nowna+"',"
                                    + " time = '"+hour+"',"
                                    + " user_ID = '101',"
                                    + " inTime = '"+hello+"',"
                                    + " outTime = null;";

                                    pstmt = conn.prepareStatement(query);
                                    pstmt.executeUpdate();

                                    JOptionPane.showMessageDialog(null, "Added Transaction");

                                }

                            }

                        }

                    }else{ ///// EH AYAW HUMIGA NG WALANG GAMOT

                        JOptionPane.showMessageDialog(null,"Please Select Medicine", null, JOptionPane.WARNING_MESSAGE);
                    }

                }

                //// MAY GAMOT NA PINILI
            }else{
                ////// INSTANTIATION /////
                String medname = tbl_med.getValueAt(row, 0).toString();

                String med_id = "SELECT med_id FROM med_table WHERE med_name='"+medname+"'";
                pstmt = conn.prepareStatement(med_id);
                rs = pstmt.executeQuery(med_id);

                while (rs.next()){

                    id_ng_koya_mo = rs.getString("med_id");
                }

                ////// CHECK KUNG NAKATATLO NA SIYA NGAYONG ARAW //////
                String limit = "SELECT COUNT(date_given) as 'A' FROM med_dspnsd WHERE id_no='"+student+"'"
                + " AND date_given ='"+nowna+"';";
                pstmt = conn.prepareStatement(limit);
                rs = pstmt.executeQuery();
                while (rs.next()){
                    int i = rs.getInt("A");

                    if (i==3){ /////// KAPAG NAKATATLO NA SIYA
                        JOptionPane.showMessageDialog(null, "This person has already taken 3 medicine today","WARNING",JOptionPane.WARNING_MESSAGE);
                        int decide = JOptionPane.showConfirmDialog(null, "Do you want to provide a Clinical Assessment?",null,JOptionPane.YES_NO_OPTION);

                        if (decide == 0){
                            jTabbedPane1.setSelectedIndex(1);
                        }

                    }else{ //////KUNG HINDI PA SIYA NAKATATLO
                        int dialogResult;

                        ///// TANUNGIN KUNG MAY BEDREST O WALA

                        if (tgl_bedrest.isSelected()){ // KAPAG MAY BEDREST
                            //                                    String bed = " bedrest = '1', inTime = '"+hour+"'";
                            dialogResult = JOptionPane.showConfirmDialog (null, "Dispense "+medname+ " to "+txt_name.getText()+" with Bedrest. Proceed?","Warning",JOptionPane.YES_NO_OPTION);

                        }else{ // ETO WALANG BEDREST

                            dialogResult = JOptionPane.showConfirmDialog (null, "Dispense "+medname+ " to "+txt_name.getText()+". Proceed?","Warning",JOptionPane.YES_NO_OPTION);

                        }

                        if (dialogResult==0){
                            if (row == -1){

                                JOptionPane.showMessageDialog(null, "Please Select Medicine");

                            }else{

                                //                                        String getCount = tbl_med.getModel().getValueAt(row, 1).toString();

                                String bilang = tbl_med.getModel().getValueAt(row, 1).toString();
                                ///// TIGNAN KUNG MAY BILANG /////////
                                if (bilang.equals("0")){
                                    int diablo = JOptionPane.showConfirmDialog(null, "This medicine is out of stock, Proceed to Clinical Assessment?","Hello Assessment",JOptionPane.YES_OPTION);

                                    //// PAG WALA
                                    if (diablo==0){
                                        jTabbedPane1.setSelectedIndex(1);
                                    }

                                    //// E MAY BILANG NGA SYA //////////
                                }else{

                                    if (tgl_bedrest.isSelected()){

                                        ///// CHECK KUNG NAKA NASA BED SIYA //////

                                        String check = "SELECT date_given, inTime FROM med_dspnsd WHERE id_no = '"+lbl_id.getText()+"' AND outTime is null AND inTime is not null"
                                        + " AND date_given='"+nowna+"';";
                                        pstmt = conn.prepareStatement(check);
                                        rs = pstmt.executeQuery(check);

                                        ///// kung meron nga siya /////
                                        if (rs.next()){

                                            JOptionPane.showMessageDialog(null, "This person is already in bed");
                                        }else{

                                            ///// bilangin ang bed na na-okupa /////
                                            String count = "SELECT COUNT(id_no) as 'A' FROM med_dspnsd WHERE inTime is not null and outTime is null;";
                                            pstmt = conn.prepareStatement(count);
                                            rs = pstmt.executeQuery();

                                            while (rs.next()){
                                                int get = rs.getInt("A");
                                                if (get==4){
                                                    JOptionPane.showMessageDialog(null, "All Beds are currently occupied");
                                                }else{

                                                    /////DITO KA NA MAG INSERT SA DATABASE
                                                    String query = "INSERT INTO med_dspnsd SET"
                                                    + " med_id = (SELECT med_id FROM med_table WHERE med_name = '"+medname+"'),"
                                                    + " ill_id = (SELECT ill_id FROM ill_table WHERE ill_name = '"+illname+"'),"
                                                    + " bedrest = '"+b_result+"',"
                                                    + " id_no = '"+lbl_id.getText()+"',"
                                                    + " date_given = '"+nowna+"',"
                                                    + " time = '"+hour+"',"
                                                    + " user_ID = '101',"
                                                    + " inTime = '"+hello+"',"
                                                    + " outTime = null;";

                                                    pstmt = conn.prepareStatement(query);
                                                    pstmt.executeUpdate();

                                                    String getqnty = "SELECT * FROM med_table WHERE med_id = (SELECT med_id FROM med_table WHERE med_name = '"+medname+"');";
                                                    pstmt = conn.prepareStatement(getqnty);
                                                    rs = pstmt.executeQuery();

                                                    if(rs.next()){
                                                        String gago = rs.getString("med_remain");
                                                        System.out.println(gago);
                                                        int finalresult = Integer.parseInt(gago) - 1;
                                                        System.out.println(finalresult);

                                                        String addqnty = "UPDATE med_table SET"
                                                        +" med_remain  = '"+finalresult+"'"
                                                        + " WHERE med_id = '"+id_ng_koya_mo+"';";

                                                        pstmt = conn.prepareStatement(addqnty);
                                                        pstmt.executeUpdate();

                                                        JOptionPane.showMessageDialog(null, "Added Transaction");

                                                    }

                                                }

                                            }

                                        }

                                    }else{

                                        String sql = "INSERT INTO med_dspnsd SET"
                                        + " med_id = (SELECT med_id FROM med_table WHERE med_name = '"+medname+"')"
                                        + ", ill_id = (SELECT ill_id FROM ill_table WHERE ill_name = '"+illname+"')"
                                        + ", id_no='"+lbl_id.getText()+"'"
                                        + ", date_given='"+nowna+"'"
                                        + ", time='"+hour+"'"
                                        + ", user_ID='101'"
                                        + ", inTime=null"
                                        + ", outTime=null;";

                                        pstmt = conn.prepareStatement(sql);
                                        pstmt.executeUpdate();

                                        String getqnty = "SELECT med_remain FROM med_table WHERE med_id = (SELECT med_id FROM med_table WHERE med_name = '"+medname+"');";
                                        pstmt = conn.prepareStatement(getqnty);
                                        rs = pstmt.executeQuery();
                                        while(rs.next()){

                                            int gago1 = rs.getInt("med_remain");
                                            System.out.println(gago1);
                                            int finalresult = (gago1)-1;
                                            System.out.println(finalresult);

                                            String addqnty = "UPDATE med_table SET"
                                            +" med_remain  = '"+finalresult+"'"
                                            + " WHERE med_id = '"+id_ng_koya_mo+"';";

                                            pstmt = conn.prepareStatement(addqnty);
                                            pstmt.executeUpdate();

                                            JOptionPane.showMessageDialog(null, "Transaction Added");

                                        }

                                    }

                                    String xo = cmb_illname.getSelectedItem().toString();

                                    String getCat = "SELECT category_id FROM ill_table WHERE ill_name='"+xo+"';";
                                    pstmt = conn.prepareStatement(getCat);
                                    rs = pstmt.executeQuery();
                                    while (rs.next()){
                                        int cat_id = rs.getInt("category_id");
                                        if (cat_id == 3){
                                            JOptionPane.showMessageDialog(null, "Recommended to provide Clinical Assessment");
                                            jTabbedPane1.setSelectedIndex(2);

                                            txt_assessment.setText(xo);
                                        }
                                    }
                                }
                            }
                        }
                    }
                }

            }

        }catch(Exception e){
            e.printStackTrace();
        }

    }//GEN-LAST:event_btn_medActionPerformed

    private void tgl_bedrestItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_tgl_bedrestItemStateChanged

    }//GEN-LAST:event_tgl_bedrestItemStateChanged

    private void tgl_bedrestMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tgl_bedrestMouseClicked

    }//GEN-LAST:event_tgl_bedrestMouseClicked

    private void tgl_bedrestMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tgl_bedrestMousePressed
        // TODO add your handling code here:
    }//GEN-LAST:event_tgl_bedrestMousePressed

    private void tgl_bedrestActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tgl_bedrestActionPerformed

    }//GEN-LAST:event_tgl_bedrestActionPerformed

    private void txt_searchmedFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txt_searchmedFocusGained
        txt_searchmed.selectAll();
    }//GEN-LAST:event_txt_searchmedFocusGained

    private void txt_searchmedFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txt_searchmedFocusLost

    }//GEN-LAST:event_txt_searchmedFocusLost

    private void txt_searchmedActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_searchmedActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_searchmedActionPerformed

    private void txt_searchmedKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_searchmedKeyReleased
    
    }//GEN-LAST:event_txt_searchmedKeyReleased

    private void txt_searchmedKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_searchmedKeyTyped
       

    }//GEN-LAST:event_txt_searchmedKeyTyped

    private void txt_nameFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txt_nameFocusGained
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_nameFocusGained

    private void txt_nameFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txt_nameFocusLost
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_nameFocusLost

    private void txt_nameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_nameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_nameActionPerformed

    private void txt_nameKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_nameKeyReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_nameKeyReleased

    private void txt_nameKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_nameKeyTyped
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_nameKeyTyped

    private void btn_print_assessActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_print_assessActionPerformed
        if (txt_assessment.getText().equals("") || txt_recommend.getText().equals("")){
            JOptionPane.showMessageDialog(this, "Please provide Assessment and Recommendation");

        }else{

            try{

                String bakanasalabasna = "SELECT id_no, assdate FROM clinic_assess WHERE id_no='"+lbl_id.getText()+"' AND assdate = '"+nowna+"'";
                pstmt = conn.prepareStatement(bakanasalabasna);
                rs = pstmt.executeQuery();

                if (rs.next()){

                    JOptionPane.showMessageDialog(null, "This person had already received a clinical assessment");

                }else{

                    try{
                        String sql = "INSERT INTO clinic_assess SET ass_num= '"+lbl_assess.getText()+"', id_no = '"+lbl_id.getText()+"'"
                        + ", assessment = '"+txt_assessment.getText()+"', recommendation = '"+txt_recommend.getText()+"', assdate = '"+nowna+"', isCreated = '"+101+"';";
                        pstmt = conn.prepareStatement(sql);
                        pstmt.executeUpdate();

                        int dialogresult = JOptionPane.showConfirmDialog(rootPane, "Re-admission Completed, Click Yes to Print", "Hello Print", JOptionPane.YES_OPTION);;
                        if (dialogresult == 0){
                            JasperDesign jd=JRXmlLoader.load("C:\\Users\\Benjie\\Desktop\\PROGRAM FILE THESIS 2015-2016\\CMS\\CMS\\src\\reports\\assessmentslip.jrxml");
                            //String ci = "SELECT * FROM readmission WHERE stud_no = '"+stud_no.getText()+"';";
                            String ci = "SELECT * FROM clinic_assess INNER JOIN student_table ON"
                            + " clinic_assess.id_no = patient_tbl.id_no"
                            // + " INNER JOIN nurse_table ON assessment.isCreated = nurse_table.user_ID"
                            + " INNER JOIN guardian_table ON clinic_assess.id_no = guardian_table.id_no"
                            + " WHERE assessment.ass_no = '"+lbl_assess.getText()+"';";

                            JRDesignQuery newQuery = new JRDesignQuery();
                            newQuery.setText(ci);

                            jd.setQuery(newQuery);
                            JasperReport jr = JasperCompileManager.compileReport(jd);

                            ////////////////////////////////ETO ANG MAGIC PRINTING BENJIE!/////////////////
                            ///////////////////////////////////////////////////////////////////////////////

                            JasperPrint jp=JasperFillManager.fillReport(jr, null,conn);
                            JasperPrintManager.printReport(jp, false);

                            JasperExportManager.exportReportToPdfFile(jp,"report.pdf");

                            if (Desktop.isDesktopSupported()) {
                                try {
                                    File myFile = new File("report.pdf");
                                    Desktop.getDesktop().open(myFile);
                                } catch (IOException ex) {
                                    // no application registered for PDFs
                                }
                            }
                            //JasperViewer.viewReport(jp, false);

                        }

                    }catch(Exception e){
                        e.printStackTrace();
                    }

                }

            }catch(SQLException ex){
                Logger.getLogger(Medication.class.getName()).log(Level.SEVERE, null, ex);
            }
        }

    }//GEN-LAST:event_btn_print_assessActionPerformed

    private void txt_ageFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txt_ageFocusGained
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_ageFocusGained

    private void txt_ageFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txt_ageFocusLost
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_ageFocusLost

    private void txt_ageActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_ageActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_ageActionPerformed

    private void txt_ageKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_ageKeyReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_ageKeyReleased

    private void txt_ageKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_ageKeyTyped
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_ageKeyTyped

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(temp_medication.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(temp_medication.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(temp_medication.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(temp_medication.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new temp_medication().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn_med;
    private javax.swing.JButton btn_print_assess;
    public javax.swing.JComboBox cmb_illname;
    private javax.swing.JLabel jLabel106;
    private javax.swing.JLabel jLabel107;
    private javax.swing.JLabel jLabel108;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel34;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JLabel lbl_assess;
    public javax.swing.JTable tbl_med;
    private javax.swing.JToggleButton tgl_bedrest;
    private javax.swing.JTextField txt_age;
    private javax.swing.JTextField txt_assessment;
    private javax.swing.JLabel txt_category;
    private javax.swing.JTextField txt_name;
    private javax.swing.JTextField txt_recommend;
    private javax.swing.JTextField txt_searchmed;
    // End of variables declaration//GEN-END:variables
}
